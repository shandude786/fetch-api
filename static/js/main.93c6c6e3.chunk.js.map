{"version":3,"sources":["components/RenderApi.js","components/FetchApi.js","App.js","reportWebVitals.js","index.js"],"names":["RenderApi","className","scope","this","props","Todos","map","ele","name","email","address","street","suite","city","zipcode","phone","id","Component","FetchApi","state","item","username","geo","lat","lng","website","company","catchPhrase","bs","todos","itemList","a","fetch","method","headers","res","ok","Error","statusText","json","data","console","log","push","setState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2QAEqBA,E,4JACnB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yBAGJ,gCACGC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACrB,OACE,+BACE,6BAAKA,EAAIC,OACT,6BAAKD,EAAIE,QACT,+BACGF,EAAIG,QAAQC,OADf,IACwBJ,EAAIG,QAAQE,MADpC,KAC6CL,EAAIG,QAAQG,KADzD,IAEIN,EAAIG,QAAQI,WAEhB,6BAAKP,EAAIQ,UAPFR,EAAIS,kB,GAjBUC,aCAlBC,E,4MACnBC,MAAQ,CACNC,KAAM,CACJ,CACEJ,GAAI,GACJR,KAAM,aACNa,SAAU,WACVZ,MAAO,oBACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,WACPC,KAAM,WACNC,QAAS,SACTQ,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTT,MAAO,wBACPU,QAAS,eACTC,QAAS,CACPlB,KAAM,UACNmB,YAAa,yCACbC,GAAI,gCAGR,CACEZ,GAAI,GACJR,KAAM,SACNa,SAAU,WACVZ,MAAO,oBACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,WACPC,KAAM,WACNC,QAAS,SACTQ,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTT,MAAO,wBACPU,QAAS,eACTC,QAAS,CACPlB,KAAM,UACNmB,YAAa,yCACbC,GAAI,iCAIVC,MAAO,GACPC,SAAU,I,8FAGZ,kCAAAC,EAAA,+EAEsBC,MAAM,6CAA8C,CACpEC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBALxB,WAEUC,EAFV,QAQaC,GARb,sBASYC,MAAMF,EAAIG,YATtB,uBAWuBH,EAAII,OAX3B,OAWUC,EAXV,OAYIC,QAAQC,IAAI,OAAQF,EAAK,IAErBpB,EAAOjB,KAAKgB,MAAMC,KACtBqB,QAAQC,IAAItB,GACRU,EAAW3B,KAAKgB,MAAMW,SAC1BW,QAAQC,IAAIZ,GACZA,EAASa,KAAT,MAAAb,EAAQ,YAASV,GAAT,mBAAkBoB,KAE1BrC,KAAKyC,SAAS,CAAEd,SAAUA,IApB9B,kDAsBIW,QAAQC,IAAR,MAtBJ,0D,0EAyBA,WACE,OAAO,cAAC,EAAD,CAAWrC,MAAOF,KAAKgB,MAAMW,e,GAhFFb,aCKjB4B,E,4JACnB,WACE,OACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJyBgB,aCKlB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.93c6c6e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class RenderApi extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Address</th>\r\n              <th scope=\"col\">Phone</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.Todos.map((ele) => {\r\n              return (\r\n                <tr key={ele.id}>\r\n                  <td>{ele.name}</td>\r\n                  <td>{ele.email}</td>\r\n                  <td>\r\n                    {ele.address.street},{ele.address.suite} ,{ele.address.city}\r\n                    :{ele.address.zipcode}\r\n                  </td>\r\n                  <td>{ele.phone}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RenderApi from \"./RenderApi\";\r\nexport default class FetchApi extends Component {\r\n  state = {\r\n    item: [\r\n      {\r\n        id: 11,\r\n        name: \"Shanti Lal\",\r\n        username: \"Shandude\",\r\n        email: \"Shanti@agmail.com\",\r\n        address: {\r\n          street: \"New Street\",\r\n          suite: \"Apt. 556\",\r\n          city: \"Pindwara\",\r\n          zipcode: \"307022\",\r\n          geo: {\r\n            lat: \"-37.3159\",\r\n            lng: \"81.1496\",\r\n          },\r\n        },\r\n        phone: \"1-770-736-8031 x56442\",\r\n        website: \"shandude.org\",\r\n        company: {\r\n          name: \"GKM It \",\r\n          catchPhrase: \"Multi-layered client-server neural-net\",\r\n          bs: \"harness real-time e-markets\",\r\n        },\r\n      },\r\n      {\r\n        id: 12,\r\n        name: \"Mukesh\",\r\n        username: \"Shandude\",\r\n        email: \"Shanti@agmail.com\",\r\n        address: {\r\n          street: \"New Street\",\r\n          suite: \"Apt. 556\",\r\n          city: \"Pindwara\",\r\n          zipcode: \"307022\",\r\n          geo: {\r\n            lat: \"-37.3159\",\r\n            lng: \"81.1496\",\r\n          },\r\n        },\r\n        phone: \"1-770-736-8031 x56442\",\r\n        website: \"shandude.org\",\r\n        company: {\r\n          name: \"GKM It \",\r\n          catchPhrase: \"Multi-layered client-server neural-net\",\r\n          bs: \"harness real-time e-markets\",\r\n        },\r\n      },\r\n    ],\r\n    todos: [],\r\n    itemList: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/users\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (!res.ok) {\r\n        throw Error(res.statusText);\r\n      }\r\n      const data = await res.json();\r\n      console.log(\"Data\", data[0]);\r\n\r\n      let item = this.state.item;\r\n      console.log(item);\r\n      let itemList = this.state.itemList;\r\n      console.log(itemList);\r\n      itemList.push(...item, ...data);\r\n\r\n      this.setState({ itemList: itemList });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    return <RenderApi Todos={this.state.itemList} />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//import GIForm from \"./Forms/GIForm\";\n//import CrudFormReact from \"./Forms/CrudFormReact\";\n\nimport FetchApi from \"./components/FetchApi\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FetchApi />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}